// Code generated by mockery v2.49.1. DO NOT EDIT.

package mocks

import (
	context "context"

	repository "github.com/sathishs-dev/pismo-transactions/pkg/repository"
	mock "github.com/stretchr/testify/mock"
)

// PismoRepo is an autogenerated mock type for the PismoRepo type
type PismoRepo struct {
	mock.Mock
}

// CreateAccount provides a mock function with given fields: ctx, document_number
func (_m *PismoRepo) CreateAccount(ctx context.Context, document_number string) error {
	ret := _m.Called(ctx, document_number)

	if len(ret) == 0 {
		panic("no return value specified for CreateAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, document_number)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateTransaction provides a mock function with given fields: ctx, txn
func (_m *PismoRepo) CreateTransaction(ctx context.Context, txn repository.Transaction) error {
	ret := _m.Called(ctx, txn)

	if len(ret) == 0 {
		panic("no return value specified for CreateTransaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, repository.Transaction) error); ok {
		r0 = rf(ctx, txn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAccountByAccountID provides a mock function with given fields: ctx, account_id
func (_m *PismoRepo) GetAccountByAccountID(ctx context.Context, account_id int) (*repository.Account, error) {
	ret := _m.Called(ctx, account_id)

	if len(ret) == 0 {
		panic("no return value specified for GetAccountByAccountID")
	}

	var r0 *repository.Account
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int) (*repository.Account, error)); ok {
		return rf(ctx, account_id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int) *repository.Account); ok {
		r0 = rf(ctx, account_id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*repository.Account)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, account_id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAccountByDocumentNo provides a mock function with given fields: ctx, document_number
func (_m *PismoRepo) GetAccountByDocumentNo(ctx context.Context, document_number string) (bool, error) {
	ret := _m.Called(ctx, document_number)

	if len(ret) == 0 {
		panic("no return value specified for GetAccountByDocumentNo")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (bool, error)); ok {
		return rf(ctx, document_number)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, document_number)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, document_number)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPismoRepo creates a new instance of PismoRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPismoRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *PismoRepo {
	mock := &PismoRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
